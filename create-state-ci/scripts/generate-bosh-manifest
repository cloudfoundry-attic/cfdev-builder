#!/usr/bin/env bash
set -euo pipefail

root_dir="$(cd "$(dirname "$0")"/.. && pwd)"
output_dir="$root_dir"/output/cache
imgscf_dir="$root_dir"/images/cf
ops_dir="$root_dir"/images/cf/bosh-operations
runc_ops_dir="/Users/pivotal/workspace/bosh-runc-cpi-release/operations"
while getopts "b:s:cu" arg; do
  case $arg in
    b) bosh_deployment="$(cd $OPTARG && pwd)"
      ;;
    s) stemcell_version=$OPTARG
      ;;
    c) include_credhub=true
      ;;
    u) include_uaa=true
      ;;
  esac
done
for var in bosh_deployment stemcell_version; do
  if [[ -z ${!var:-} ]]; then
    echo "USAGE: generate-bosh-manifest -b <path-to-bosh-deployment> -s <stemcell_version>"
    exit 1
  fi
done
set -x

cp "$imgscf_dir"/deploy-bosh "$output_dir"/bin/deploy-bosh

ops=( \
      -o jumpbox-user.yml \
)
if [[ ${include_uaa:-} ]]; then
  ops+=(-o uaa.yml)
fi

if [[ ${include_credhub:-} ]]; then
  ops+=(-o credhub.yml)
fi

pushd "$bosh_deployment"
  bosh int bosh.yml \
    ${ops[@]} \
    \
    -o "$runc_ops_dir"/runc-cpi.yml \
    \
    -v director_name="director" \
    -v internal_cidr=10.0.0.0/16 \
    -v internal_gw=10.0.0.1 \
    -v internal_ip=10.0.0.4 \
    -v external_cpid_ip=127.0.0.1 \
    -v internal_cpid_ip=192.168.65.3 \
    > "$output_dir"/director.yml

  bosh int runtime-configs/dns.yml \
    -o "$ops_dir"/add-host-pcfdev-dns-record.yml \
    \
    > "$output_dir"/dns.yml
popd
