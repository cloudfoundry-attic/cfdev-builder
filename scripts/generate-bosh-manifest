#!/usr/bin/env bash
set -euo pipefail

root_dir="$(cd "$(dirname "$0")"/.. && pwd)"
output_dir="$root_dir"/output/cache
imgscf_dir="$root_dir"/images/cf
ops_dir="$root_dir"/images/cf/bosh-operations
while getopts "b:s:cu" arg; do
  case $arg in
    b) bosh_deployment="$(cd $OPTARG && pwd)"
      ;;
    s) stemcell_version=$OPTARG
      ;;
    c) include_credhub=true
      ;;
    u) include_uaa=true
      ;;
  esac
done
for var in bosh_deployment stemcell_version; do
  if [[ -z ${!var:-} ]]; then
    echo "USAGE: generate-bosh-manifest -b <path-to-bosh-deployment> -s <stemcell_version>"
    exit 1
  fi
done
set -x

cp "$imgscf_dir"/deploy-bosh "$output_dir"/bin/deploy-bosh

ops=( \
      -o bosh-lite.yml \
      -o bosh-lite-runc.yml \
      -o bosh-lite-grootfs.yml \
      -o "$ops_dir"/remove-bosh-warden-cpi.yml
      -o warden/cpi.yml \
      -o warden/cpi-grootfs.yml \
      -o jumpbox-user.yml \
)
if [[ ${include_uaa:-} ]]; then
  ops+=(-o uaa.yml)
fi

if [[ ${include_credhub:-} ]]; then
  ops+=(-o credhub.yml)
fi

stemcell_ops="---
- type: replace
  path: /resource_pools/name=vms/stemcell
  value:
    url: https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-xenial-go_agent?v=$stemcell_version
"

pushd "$bosh_deployment"
  bosh int bosh.yml \
    ${ops[@]} \
    \
    -o "$ops_dir"/disable-app-armor.yml \
    -o "$ops_dir"/remove-ports.yml \
    -o "$ops_dir"/use-warden-cpi-v39.yml \
    -o <(echo "$stemcell_ops") \
    -o "$ops_dir"/replace-dns-with-vpnkit.yml \
    -o "$ops_dir"/change-router-cert.yml \
    \
    -v director_name="warden" \
    -v internal_cidr=10.245.0.0/24 \
    -v internal_gw=10.245.0.1 \
    -v internal_ip=10.245.0.2 \
    -v garden_host=10.0.0.10 \
    -v system_domain=dev.cfdev.sh \
    > "$output_dir"/director.yml

  bosh int runtime-configs/dns.yml \
    -o "$ops_dir"/add-host-pcfdev-dns-record.yml \
    \
    > "$output_dir"/dns.yml
popd
